@using ImaginaryShop.Model.Services
@using System.Security.Claims
@inject CategoryService CategoryService
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ImaginaryShop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/ImaginaryShop.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=person" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

</head>
<body>

    <header>



        <div class="row" style="padding:10px">
            <div class="col-lg-3 col-md-3">
            </div>




            <div class="col-lg-12 col-md-12">
                <div class="flex-right">


                    <!-- Login formular -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div>@User.Claims.FirstOrDefault(c => c.Type == "Username")?.Value</div>
                    }

                    <div class="login-container">
                        <!-- Knap til at åbne formularen -->
                        <button id="toggleButton"><i class="fa-solid fa-user"></i></button>

                        @if (!User.Identity.IsAuthenticated)
                        {

                            <!-- Login formular -->
                            <div id="loginForm">
                                <h3>Login</h3>
                                <form id="loginformelement">

                                    <span id="loginMessage" class="message"></span>
                                    <div class="mb-3">
                                        <label for="username" class="form-label">Brugernavn</label>
                                        <input type="text" class="form-control" id="username" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="password" class="form-label">Adgangskode</label>
                                        <input type="password" class="form-control" id="password" required>
                                    </div>
                                    <button type="submit" class="cart-button"><i class="fa-solid fa-right-to-bracket"></i></button>
                                </form>
                            </div>
                        }
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div id="logOutForm">
                                <h3>Log ud</h3>
                                <form id="logoutformelement">
                                    <button type="submit" class="cart-button"><i class="fa fa-sign-out"></i></button>
                                </form>
                            </div>
                        }
                    </div>

                    <div class="dropdown">

                        <button class="btn btn-secondary dropdown-toggle currencyBtn" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

                            @{
                                var currency = HttpContextAccessor.HttpContext.Request.Cookies["currency"] ?? "DKK"; // Standardværdi: DKK
                            }
                            @currency
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" href="/currency/set/DKK">DKK</a>
                            <a class="dropdown-item" href="/currency/set/&euro;">&euro;</a>
                        </div>
                    </div><strong><label id="total" class="fs-4">0.00</label></strong>

                    @*
                    <div class="price" id="totalPrice"> 0.00</div>
                    <div style="width:10px"></div> *@
                </div>

            </div>
        </div>

    </header>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


    <script>

        const toggleButton = document.getElementById('toggleButton');
        const loginForm = document.getElementById('loginForm');
        const logOutForm = document.getElementById('logOutForm');

        toggleButton.addEventListener('click', function () {
            // Toggle login formens synlighed med en animation
            if (document.getElementById('loginForm') != null)
                loginForm.classList.toggle('show');

            
            if (document.getElementById('logOutForm') != null) {

                logOutForm.classList.toggle('show');
            }
               
        });
        console.log(document.getElementById("logOutForm"));
        document.addEventListener("DOMContentLoaded", function () {
            if (document.getElementById("logOutForm") != null) {
                document.getElementById("logOutForm").addEventListener("click", async function (event) {
                    event.preventDefault(); // Forhindrer formularen i at blive sendt på normal måde

                    console.log("test");
                    // Send asynkront loginkald
                    const response = await fetch("/Login/logout", {
                        method: "POST", // Brug POST-metoden
                        headers: {
                            "Content-Type": "application/json", // Angiv at vi sender JSON
                        }
                    });

                    const result = await response.json();
                    console.log(result)
                    if (result.redirectUrl) {
                        // Hvis vi får en redirect URL, omdiriger brugeren
                        window.location.href = result.redirectUrl; // Manuelt redirect

                    }
                });

            }
        });
     

        if (document.getElementById("loginformelement") != null) {
            document.getElementById("loginformelement").addEventListener("click", async function (event) {
                event.preventDefault(); // Forhindrer formularen i at blive sendt på normal måde

                // Hent brugerens input
                const username = document.getElementById("username").value;
                const password = document.getElementById("password").value;

                // Send asynkront loginkald
                const response = await fetch("/Login/login", {
                    method: "POST", // Brug POST-metoden
                    headers: {
                        "Content-Type": "application/json", // Angiv at vi sender JSON
                    },
                    body: JSON.stringify({
                        username: username,
                        password: password,
                    }),
                });
                const result = await response.json();
                // Håndtering af serverens svar
                if (response.ok) {
                    loginForm.classList.toggle('hide');
                    if (result.redirectUrl) {
                        // Hvis vi får en redirect URL, omdiriger brugeren
                        window.location.href = result.redirectUrl; // Manuelt redirect

                    }

                } else {
                    // Hvis login fejler, vis en fejlbesked
                   //
                    document.getElementById("loginMessage").textContent = result.message;
                }
            });
        }

        async function fetchData() {
            try {
                let response = await fetch("/ShoppingBasket");
                let data = await response.json();
                document.getElementById("total").textContent = data.total.toFixed(2);


            } catch (error) {
                console.log(error)
            }
        }

        fetchData(); // Kald funktionen når siden indlæses
    </script>


    <div class="xl-container">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    @*    <footer class="border-top footer text-muted">
    <div class="container">
    &copy; 2024 - ImaginaryShop - <a asp-area="" asp-page="/Privacy">Privacy</a>
    </div>
    </footer> *@


    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>